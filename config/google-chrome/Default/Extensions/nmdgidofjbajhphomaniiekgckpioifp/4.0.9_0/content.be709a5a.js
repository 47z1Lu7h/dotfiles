(()=>{const n=/Chrome/.test(navigator.userAgent);function t(n,t,e,o){let r={swatch:{hue:n,saturation:t,lightness:e,chosenId:o},hsl:"",lightnessShift:"",hueHovered:"",hueVisited:"",alpha:""};return function(n){n.hsl=`hsl(${n.swatch.hue}, ${n.swatch.saturation}%, ${n.swatch.lightness}%)`,n.swatch.lightness>=50?n.lightnessShift=`hsl(${n.swatch.hue}, ${n.swatch.saturation}%, ${n.swatch.lightness-10}%)`:n.lightnessShift=`hsl(${n.swatch.hue}, ${n.swatch.saturation}%, ${n.swatch.lightness+10}%)`;n.hueHovered=`hsl(${n.swatch.hue+40}, ${n.swatch.saturation+20}%, ${n.swatch.lightness}%)`,n.hueVisited=`hsl(${n.swatch.hue-40}, ${n.swatch.saturation+20}%, ${n.swatch.lightness}%)`,n.alpha=`hsla(${n.swatch.hue}, ${n.swatch.saturation}%, ${n.swatch.lightness}%, 0.5)`}(r),r}function e(n){return!!n.activeTabHostname&&(!!n.activeTabId&&!!n.hosts.includes(n.activeTabHostname))}const o="color-changer-v4";t(0,0,80,"zero"),t(0,0,25,"zero"),t(68,80,80,"2-6");let r=document.createElement("style");r.id="color-changer-style";let a=new MutationObserver((function(n,t){i()})),c={attributes:!0,attributeFilter:["class"]},s="";function i(){let n=document.documentElement;n.classList.contains(o)||n.classList.add(o),a.observe(n,c)}function h(n){e(n)?(!function(n){if(!n)return;let t=":not(#increase-specificity)";s=`\n  .color-changer-v4,\n  .color-changer-v4 body,\n  .color-changer-v4 :not(img, video, svg, .rc-VideoMiniPlayer *, #player *, #player-container *, .ytd-grid-renderer *, .ytd-rich-item-renderer *, .ytd-guide-renderer *, .ytd-masthead *, #shorts-inner-container *)\n  {\n    color: ${n.fg.hsl} !important;\n    background-color: ${n.bg.hsl} !important;\n    border-color: ${n.bg.lightnessShift} !important;\n  }\n\n  .color-changer-v4${t} input,\n  .color-changer-v4${t} input *,\n  .color-changer-v4${t} textarea,\n  .color-changer-v4${t} textarea *,\n  .color-changer-v4${t} pre,\n  .color-changer-v4${t} pre *,\n  .color-changer-v4${t} code,\n  .color-changer-v4${t} code *\n  {\n    background-color: ${n.bg.lightnessShift} !important;\n  }\n\n  .color-changer-v4${t} button,\n  .color-changer-v4${t} button *\n  {\n    color: ${n.li.hsl} !important;\n    background-color: transparent !important;\n  }\n  .color-changer-v4${t} a,\n  .color-changer-v4${t} a *\n  {\n    color: ${n.li.hsl} !important;\n    background-color: transparent !important;\n  }\n  .color-changer-v4${t} a:hover,\n  .color-changer-v4${t} a:hover *\n  {\n    color: ${n.li.hueHovered} !important;\n    background-color: transparent !important;\n  }\n  .color-changer-v4${t} a:active,\n  .color-changer-v4${t} a:active *\n  {\n    color: ${n.li.hueVisited} !important;\n    background-color: transparent !important;\n  }\n  .color-changer-v4${t} a:visited,\n  .color-changer-v4${t} a:visited *\n  {\n    color: ${n.li.hueVisited} !important;\n    background-color: transparent !important;\n  }\n`}(n),r.textContent=s,document.getElementById("color-changer-style")||document.head.appendChild(r),i()):(document.documentElement.classList.remove(o),a.disconnect())}chrome.runtime.onMessage.addListener((function(n,t,e){if("UPDATE_CONTENT"===n.message)h(n.payload)})),async function(){var t;h(await(t={message:"GET_STATE"},n?chrome.runtime.sendMessage(t):browser.runtime.sendMessage(t)))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJtYXBwaW5ncyI6Ik1BRU8sTUFBTUEsRUFBVyxTQUFTQyxLQUFLQyxVQUFVQyxXQUV6QyxTQUFTQyxFQUFZQyxFQUFhQyxFQUFvQkMsRUFBbUJDLEdBQzlFLElBQUlDLEVBQWUsQ0FDakJDLE9BQVEsQyxJQUNOTCxFLFdBQ0FDLEUsVUFDQUMsRSxTQUNBQyxHQUVGRyxJQUFLLEdBQ0xDLGVBQWdCLEdBQ2hCQyxXQUFZLEdBQ1pDLFdBQVksR0FDWkMsTUFBTyxJQUdULE9BR0ssU0FBdUJOLEdBQzVCQSxFQUFNRSxJQUFNLE9BQU9GLEVBQU1DLE9BQU9MLFFBQVFJLEVBQU1DLE9BQU9KLGdCQUFnQkcsRUFBTUMsT0FBT0gsY0FDOUVFLEVBQU1DLE9BQU9ILFdBQWEsR0FDNUJFLEVBQU1HLGVBQWlCLE9BQU9ILEVBQU1DLE9BQU9MLFFBQVFJLEVBQU1DLE9BQU9KLGdCQUFnQkcsRUFBTUMsT0FBT0gsVUFBWSxPQUV6R0UsRUFBTUcsZUFBaUIsT0FBT0gsRUFBTUMsT0FBT0wsUUFBUUksRUFBTUMsT0FBT0osZ0JBQWdCRyxFQUFNQyxPQUFPSCxVQUFZLE9BRTNHRSxFQUFNSSxXQUFhLE9BQU9KLEVBQU1DLE9BQU9MLElBQU0sT0FBYUksRUFBTUMsT0FBT0osV0FBYSxRQUFRRyxFQUFNQyxPQUFPSCxjQUN6R0UsRUFBTUssV0FBYSxPQUFPTCxFQUFNQyxPQUFPTCxJQUFNLE9BQWFJLEVBQU1DLE9BQU9KLFdBQWEsUUFBUUcsRUFBTUMsT0FBT0gsY0FDekdFLEVBQU1NLE1BQVEsUUFBUU4sRUFBTUMsT0FBT0wsUUFBUUksRUFBTUMsT0FBT0osZ0JBQWdCRyxFQUFNQyxPQUFPSCxrQixDQWJyRlMsQ0FBY1AsR0FDUEEsQyxDQWVGLFNBQVNRLEVBQW1CQyxHQUNqQyxRQUFLQSxFQUFNQyxzQkFDTkQsRUFBTUUsZUFFUEYsRUFBTUcsTUFBTUMsU0FBU0osRUFBTUMsbUIsQ0NuQzFCLE1BZU1JLEVBQTJCLG1CQUtsQ25CLEVBQVksRUFBRyxFQUFHLEdBQUksUUFDdEJBLEVBQVksRUFBRyxFQUFHLEdBQUksUUFDdEJBLEVBQVksR0FBSSxHQUFJLEdBQUksT0NyQjlCLElBQUlvQixFQUFVQyxTQUFTQyxjQUFjLFNBQ3JDRixFQUFRRyxHRFk4QixzQkNWdEMsSUFBSUMsRUFBVyxJQUFJQyxrQixxQkFDZkMsRUFBaUIsQ0FBRUMsWUFBWSxFQUFNQyxnQkFBaUIsQ0FBQyxVQUV2REMsRUFBTSxHLDRIQUVWLFNBQW1CZixHQUNqQixJQUFLQSxFQUFPLE9BRVosSUFVSWdCLEVBQVEsOEJBRVpELEVBQU0sNFJBMkRDZixFQUFBaUIsR0FBQXhCLDBDQUNhTyxFQUFBa0IsR0FBQXpCLHNDQUNWTyxFQUFVa0IsR0FBQXhCLHlEQU9Dc0IsZ0NBQ2VBLGtDQUNkQSxtQ0FDQUEscUNBQ3ZCQSw4QkFFc0JBLGdDQUNDQSwrQkFDSEEsd0NBSUhoQixFQUFBa0IsR0FBQXhCLHlEQVFqQnNCLGlDQUVrQ0EsK0JBRTFCaEIsRUFBQW1CLEdBQUExQiwyRkFHTHVCLDRCQUFlQSwwQkFFbEJoQixFQUFBbUIsR0FBQTFCLDJGQUdpRHVCLGtDQUFhQSxnQ0FFOURoQixFQUFBbUIsR0FBQXhCLGtHLGtpQkQ3SDZCLG1CLDJDRDRDdkIsSUFBNEJ5QixFLFFBQUFBLEUsU0M3Q1YsYUQ4Q25CdEMsRUFDS3VDLE9BQU9DLFFBQVFDLFlBQVlILEdBRTNCSSxRQUFRRixRQUFRQyxZQUFZSCxJIiwic291cmNlcyI6WyJ1dGlscy50cyIsImNvbnN0YW50cy50cyIsImNvbnRlbnQudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29sb3IsIE1lc3NhZ2UsIFN0YXRlIH0gZnJvbSBcIi4vaW50ZXJmYWNlc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IGlzQ2hyb21lID0gL0Nocm9tZS8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDb2xvcihodWU6IG51bWJlciwgc2F0dXJhdGlvbjogbnVtYmVyLCBsaWdodG5lc3M6IG51bWJlciwgY2hvc2VuSWQ6IHN0cmluZyk6IENvbG9yIHtcclxuICBsZXQgY29sb3I6IENvbG9yID0ge1xyXG4gICAgc3dhdGNoOiB7XHJcbiAgICAgIGh1ZSxcclxuICAgICAgc2F0dXJhdGlvbixcclxuICAgICAgbGlnaHRuZXNzLFxyXG4gICAgICBjaG9zZW5JZCxcclxuICAgIH0sXHJcbiAgICBoc2w6IFwiXCIsXHJcbiAgICBsaWdodG5lc3NTaGlmdDogXCJcIixcclxuICAgIGh1ZUhvdmVyZWQ6IFwiXCIsXHJcbiAgICBodWVWaXNpdGVkOiBcIlwiLFxyXG4gICAgYWxwaGE6IFwiXCIsXHJcbiAgfVxyXG4gIHNldEhzbFN0cmluZ3MoY29sb3IpO1xyXG4gIHJldHVybiBjb2xvcjtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNldEhzbFN0cmluZ3MoY29sb3I6IENvbG9yKSB7XHJcbiAgY29sb3IuaHNsID0gYGhzbCgke2NvbG9yLnN3YXRjaC5odWV9LCAke2NvbG9yLnN3YXRjaC5zYXR1cmF0aW9ufSUsICR7Y29sb3Iuc3dhdGNoLmxpZ2h0bmVzc30lKWA7XHJcbiAgaWYgKGNvbG9yLnN3YXRjaC5saWdodG5lc3MgPj0gNTApIHtcclxuICAgIGNvbG9yLmxpZ2h0bmVzc1NoaWZ0ID0gYGhzbCgke2NvbG9yLnN3YXRjaC5odWV9LCAke2NvbG9yLnN3YXRjaC5zYXR1cmF0aW9ufSUsICR7Y29sb3Iuc3dhdGNoLmxpZ2h0bmVzcyAtIDEwfSUpYDtcclxuICB9IGVsc2Uge1xyXG4gICAgY29sb3IubGlnaHRuZXNzU2hpZnQgPSBgaHNsKCR7Y29sb3Iuc3dhdGNoLmh1ZX0sICR7Y29sb3Iuc3dhdGNoLnNhdHVyYXRpb259JSwgJHtjb2xvci5zd2F0Y2gubGlnaHRuZXNzICsgMTB9JSlgO1xyXG4gIH1cclxuICBjb2xvci5odWVIb3ZlcmVkID0gYGhzbCgke2NvbG9yLnN3YXRjaC5odWUgKyA0MCAlIDM2MH0sICR7Y29sb3Iuc3dhdGNoLnNhdHVyYXRpb24gKyAyMH0lLCAke2NvbG9yLnN3YXRjaC5saWdodG5lc3N9JSlgO1xyXG4gIGNvbG9yLmh1ZVZpc2l0ZWQgPSBgaHNsKCR7Y29sb3Iuc3dhdGNoLmh1ZSAtIDQwICUgMzYwfSwgJHtjb2xvci5zd2F0Y2guc2F0dXJhdGlvbiArIDIwfSUsICR7Y29sb3Iuc3dhdGNoLmxpZ2h0bmVzc30lKWA7XHJcbiAgY29sb3IuYWxwaGEgPSBgaHNsYSgke2NvbG9yLnN3YXRjaC5odWV9LCAke2NvbG9yLnN3YXRjaC5zYXR1cmF0aW9ufSUsICR7Y29sb3Iuc3dhdGNoLmxpZ2h0bmVzc30lLCAwLjUpYDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHNob3VsZENoYW5nZUNvbG9ycyhzdGF0ZTogU3RhdGUpOiBib29sZWFuIHtcclxuICBpZiAoIXN0YXRlLmFjdGl2ZVRhYkhvc3RuYW1lKSByZXR1cm4gZmFsc2U7XHJcbiAgaWYgKCFzdGF0ZS5hY3RpdmVUYWJJZCkgcmV0dXJuIGZhbHNlO1xyXG5cclxuICBpZiAoc3RhdGUuaG9zdHMuaW5jbHVkZXMoc3RhdGUuYWN0aXZlVGFiSG9zdG5hbWUpKSB7XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxufVxyXG5cclxuLyoqIFdvcmthcm91bmQgZm9yIG5vdCBiZWluZyBhYmxlIHRvIGF3YWl0IGFuIGFzeW5jIG1lc3NhZ2Ugd2l0aCBjaHJvbWUucnVudGltZSBpbiBGaXJlZm94LlxyXG4gKiBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD0xMjI4MDQ0XHJcbiovXHJcbmV4cG9ydCBmdW5jdGlvbiBydW50aW1lU2VuZE1lc3NhZ2UobWVzc2FnZTogTWVzc2FnZSk6IFByb21pc2U8YW55PiB7XHJcbiAgaWYgKGlzQ2hyb21lKSB7XHJcbiAgICByZXR1cm4gY2hyb21lLnJ1bnRpbWUuc2VuZE1lc3NhZ2UobWVzc2FnZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiBicm93c2VyLnJ1bnRpbWUuc2VuZE1lc3NhZ2UobWVzc2FnZSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2F2ZVN0YXRlKHN0YXRlOiBTdGF0ZSkge1xyXG4gIGlmIChpc0Nocm9tZSkge1xyXG4gICAgY2hyb21lLnN0b3JhZ2Uuc3luYy5zZXQoeyAnY29sb3JDaGFuZ2VyU3RhdGUnOiBzdGF0ZSB9KTtcclxuICB9IGVsc2Uge1xyXG4gICAgYnJvd3Nlci5zdG9yYWdlLnN5bmMuc2V0KHsgJ2NvbG9yQ2hhbmdlclN0YXRlJzogc3RhdGUgfSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gZ2V0U3RhdGUoKSB7XHJcbiAgaWYgKGlzQ2hyb21lKSB7XHJcbiAgICByZXR1cm4gY2hyb21lLnN0b3JhZ2Uuc3luYy5nZXQoWydjb2xvckNoYW5nZXJTdGF0ZSddKTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGJyb3dzZXIuc3RvcmFnZS5zeW5jLmdldChbJ2NvbG9yQ2hhbmdlclN0YXRlJ10pO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHRhYnNRdWVyeShxdWVyeTogYW55KSB7XHJcbiAgaWYgKGlzQ2hyb21lKSB7XHJcbiAgICByZXR1cm4gY2hyb21lLnRhYnMucXVlcnkocXVlcnkpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gYnJvd3Nlci50YWJzLnF1ZXJ5KHF1ZXJ5KSBhcyBQcm9taXNlPGNocm9tZS50YWJzLlRhYltdPjtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IHsgU3RhdGUgfSBmcm9tIFwiLi9pbnRlcmZhY2VzXCI7XHJcbmltcG9ydCB7IGNyZWF0ZUNvbG9yIH0gZnJvbSBcIi4vdXRpbHNcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBHRVRfU1RBVEUgPSBcIkdFVF9TVEFURVwiO1xyXG5leHBvcnQgY29uc3QgVVBEQVRFX0NPTlRFTlQgPSBcIlVQREFURV9DT05URU5UXCI7XHJcbmV4cG9ydCBjb25zdCBDSEFOR0VfQ09MT1JTID0gXCJDSEFOR0VfQ09MT1JTXCI7XHJcbmV4cG9ydCBjb25zdCBTRVRfQUNUSVZFX0JVVFRPTiA9IFwiU0VUX0FDVElWRV9CVVRUT05cIjtcclxuZXhwb3J0IGNvbnN0IFVQREFURV9DSE9TRU5fQ09MT1IgPSBcIlVQREFURV9DSE9TRU5fQ09MT1JcIjtcclxuZXhwb3J0IGNvbnN0IENIQU5HRV9MSUdIVE5FU1MgPSBcIkNIQU5HRV9MSUdIVE5FU1NcIjtcclxuZXhwb3J0IGNvbnN0IFJFU0VUID0gXCJSRVNFVFwiO1xyXG5leHBvcnQgY29uc3QgQ09OVEVOVF9DT05ORUNURUQgPSBcIkNPTlRFTlRfQ09OTkVDVEVEXCI7XHJcbmV4cG9ydCBjb25zdCBJTlZBTElEX1RBQiA9IC05OTk5O1xyXG5cclxuZXhwb3J0IGNvbnN0IEZPUkVfQlROID0gXCJmb3JlXCI7XHJcbmV4cG9ydCBjb25zdCBCQUNLX0JUTiA9IFwiYmFja1wiO1xyXG5leHBvcnQgY29uc3QgTElOS19CVE4gPSBcImxpbmtcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBDT0xPUl9DSEFOR0VSX1NUWUxFX0lEID0gXCJjb2xvci1jaGFuZ2VyLXN0eWxlXCI7XHJcbmV4cG9ydCBjb25zdCBDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUUgPSBcImNvbG9yLWNoYW5nZXItdjRcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBERUZBVUxUX1NUQVRFOiBTdGF0ZSA9IHtcclxuICBhY3RpdmVUYWJJZDogSU5WQUxJRF9UQUIsXHJcbiAgYWN0aXZlVGFiSG9zdG5hbWU6IFwiXCIsXHJcbiAgZmc6IGNyZWF0ZUNvbG9yKDAsIDAsIDgwLCAnemVybycpLFxyXG4gIGJnOiBjcmVhdGVDb2xvcigwLCAwLCAyNSwgJ3plcm8nKSxcclxuICBsaTogY3JlYXRlQ29sb3IoNjgsIDgwLCA4MCwgJzItNicpLFxyXG4gIGFjdGl2ZUJ0bjogRk9SRV9CVE4sXHJcbiAgbGlnaHRuZXNzOiA4MCxcclxuICBob3N0czogW10sXHJcbiAgbG9zdENvbm5lY3Rpb246IGZhbHNlLFxyXG4gIGludmFsaWRVcmw6IGZhbHNlLFxyXG59XHJcbiIsImltcG9ydCB7IENPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRSwgQ09MT1JfQ0hBTkdFUl9TVFlMRV9JRCwgR0VUX1NUQVRFLCBVUERBVEVfQ09OVEVOVCB9IGZyb20gXCIuL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBNZXNzYWdlLCBTdGF0ZSB9IGZyb20gXCIuL2ludGVyZmFjZXNcIjtcclxuaW1wb3J0IHsgcnVudGltZVNlbmRNZXNzYWdlLCBzaG91bGRDaGFuZ2VDb2xvcnMgfSBmcm9tIFwiLi91dGlsc1wiO1xyXG5cclxubGV0IGNjU3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xyXG5jY1N0eWxlLmlkID0gQ09MT1JfQ0hBTkdFUl9TVFlMRV9JRDtcclxuXHJcbmxldCBvYnNlcnZlciA9IG5ldyBNdXRhdGlvbk9ic2VydmVyKGNsYXNzTGlzdENoYW5nZWQpO1xyXG5sZXQgb2JzZXJ2ZXJDb25maWcgPSB7IGF0dHJpYnV0ZXM6IHRydWUsIGF0dHJpYnV0ZUZpbHRlcjogW1wiY2xhc3NcIl0gfTtcclxuXHJcbmxldCBjc3MgPSBcIlwiO1xyXG5cclxuZnVuY3Rpb24gdXBkYXRlQ3NzKHN0YXRlOiBTdGF0ZSkge1xyXG4gIGlmICghc3RhdGUpIHJldHVybjtcclxuXHJcbiAgbGV0IGNvdXJzZXJhUGxheWVyID0gXCIucmMtVmlkZW9NaW5pUGxheWVyICpcIjtcclxuICBsZXQgeW91dHViZVBsYXllciA9IFwiI3BsYXllciAqXCI7XHJcbiAgbGV0IHlvdXR1YmVGdWxsc2NyZWVuUGxheWVyID0gXCIjcGxheWVyLWNvbnRhaW5lciAqXCI7XHJcbiAgbGV0IHlvdXR1YmVUaHVtYm5haWwgPSBcIi55dGQtcmljaC1pdGVtLXJlbmRlcmVyICpcIjtcclxuICBsZXQgeW91dHViZVNpZGViYXIgPSBcIi55dGQtZ3VpZGUtcmVuZGVyZXIgKlwiO1xyXG4gIGxldCB5b3V0dWJlU2VhcmNoSGVhZGVyID0gXCIueXRkLW1hc3RoZWFkICpcIjtcclxuICBsZXQgeW91dHViZVNob3J0cyA9IFwiI3Nob3J0cy1pbm5lci1jb250YWluZXIgKlwiXHJcbiAgbGV0IHlvdXR1YmVHcmlkID0gXCIueXRkLWdyaWQtcmVuZGVyZXIgKlwiO1xyXG5cclxuICBsZXQgbm90ID0gYDpub3QoaW1nLCB2aWRlbywgc3ZnLCAke2NvdXJzZXJhUGxheWVyfSwgJHt5b3V0dWJlUGxheWVyfSwgJHt5b3V0dWJlRnVsbHNjcmVlblBsYXllcn0sICR7eW91dHViZUdyaWR9LCAke3lvdXR1YmVUaHVtYm5haWx9LCAke3lvdXR1YmVTaWRlYmFyfSwgJHt5b3V0dWJlU2VhcmNoSGVhZGVyfSwgJHt5b3V0dWJlU2hvcnRzfSlgO1xyXG4gIGxldCBub3RJZCA9IFwiOm5vdCgjaW5jcmVhc2Utc3BlY2lmaWNpdHkpXCI7XHJcblxyXG4gIGNzcyA9IGBcclxuICAuJHtDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUV9LFxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0gYm9keSxcclxuICAuJHtDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUV9ICR7bm90fVxyXG4gIHtcclxuICAgIGNvbG9yOiAke3N0YXRlLmZnLmhzbH0gIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR7c3RhdGUuYmcuaHNsfSAhaW1wb3J0YW50O1xyXG4gICAgYm9yZGVyLWNvbG9yOiAke3N0YXRlLmJnLmxpZ2h0bmVzc1NoaWZ0fSAhaW1wb3J0YW50O1xyXG4gIH1cclxuXHJcbiAgLiR7Q09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FfSR7bm90SWR9IGlucHV0LFxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBpbnB1dCAqLFxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSB0ZXh0YXJlYSxcclxuICAuJHtDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUV9JHtub3RJZH0gdGV4dGFyZWEgKixcclxuICAuJHtDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUV9JHtub3RJZH0gcHJlLFxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBwcmUgKixcclxuICAuJHtDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUV9JHtub3RJZH0gY29kZSxcclxuICAuJHtDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUV9JHtub3RJZH0gY29kZSAqXHJcbiAge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJHtzdGF0ZS5iZy5saWdodG5lc3NTaGlmdH0gIWltcG9ydGFudDtcclxuICB9XHJcblxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBidXR0b24sXHJcbiAgLiR7Q09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FfSR7bm90SWR9IGJ1dHRvbiAqXHJcbiAge1xyXG4gICAgY29sb3I6ICR7c3RhdGUubGkuaHNsfSAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgLiR7Q09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FfSR7bm90SWR9IGEsXHJcbiAgLiR7Q09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FfSR7bm90SWR9IGEgKlxyXG4gIHtcclxuICAgIGNvbG9yOiAke3N0YXRlLmxpLmhzbH0gIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBhOmhvdmVyLFxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBhOmhvdmVyICpcclxuICB7XHJcbiAgICBjb2xvcjogJHtzdGF0ZS5saS5odWVIb3ZlcmVkfSAhaW1wb3J0YW50O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcclxuICB9XHJcbiAgLiR7Q09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FfSR7bm90SWR9IGE6YWN0aXZlLFxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBhOmFjdGl2ZSAqXHJcbiAge1xyXG4gICAgY29sb3I6ICR7c3RhdGUubGkuaHVlVmlzaXRlZH0gIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG4gIC4ke0NPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRX0ke25vdElkfSBhOnZpc2l0ZWQsXHJcbiAgLiR7Q09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FfSR7bm90SWR9IGE6dmlzaXRlZCAqXHJcbiAge1xyXG4gICAgY29sb3I6ICR7c3RhdGUubGkuaHVlVmlzaXRlZH0gIWltcG9ydGFudDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7XHJcbiAgfVxyXG5gO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbGFzc0xpc3RDaGFuZ2VkKG11dGF0aW9uTGlzdDogTXV0YXRpb25SZWNvcmRbXSwgb2JzOiBNdXRhdGlvbk9ic2VydmVyKSB7XHJcbiAgYWRkQ2xhc3MoKTtcclxufVxyXG5cclxuZnVuY3Rpb24gYWRkQ2xhc3MoKSB7XHJcbiAgbGV0IGh0bWwgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XHJcbiAgaWYgKCFodG1sLmNsYXNzTGlzdC5jb250YWlucyhDT0xPUl9DSEFOR0VSX0NMQVNTX05BTUUpKSB7XHJcbiAgICBodG1sLmNsYXNzTGlzdC5hZGQoQ09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FKTtcclxuICB9XHJcblxyXG4gIG9ic2VydmVyLm9ic2VydmUoaHRtbCwgb2JzZXJ2ZXJDb25maWcpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW1vdmVDbGFzcygpIHtcclxuICBsZXQgaHRtbCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuICBodG1sLmNsYXNzTGlzdC5yZW1vdmUoQ09MT1JfQ0hBTkdFUl9DTEFTU19OQU1FKTtcclxuICBvYnNlcnZlci5kaXNjb25uZWN0KCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHVwZGF0ZUNvbnRlbnQoc3RhdGU6IFN0YXRlKSB7XHJcbiAgaWYgKHNob3VsZENoYW5nZUNvbG9ycyhzdGF0ZSkpIHtcclxuICAgIHVwZGF0ZUNzcyhzdGF0ZSk7XHJcblxyXG4gICAgY2NTdHlsZS50ZXh0Q29udGVudCA9IGNzcztcclxuXHJcbiAgICBpZiAoIWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY29sb3ItY2hhbmdlci1zdHlsZVwiKSkge1xyXG4gICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGNjU3R5bGUpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZENsYXNzKCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJlbW92ZUNsYXNzKCk7XHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbk1lc3NhZ2UobWVzc2FnZTogTWVzc2FnZSwgX3NlbmRlcjogYW55LCByZXM6IGFueSkge1xyXG4gIHN3aXRjaCAobWVzc2FnZS5tZXNzYWdlKSB7XHJcbiAgICBjYXNlIFVQREFURV9DT05URU5UOiB7XHJcbiAgICAgIHVwZGF0ZUNvbnRlbnQobWVzc2FnZS5wYXlsb2FkKTtcclxuICAgIH07IGJyZWFrO1xyXG4gICAgZGVmYXVsdDogYnJlYWs7XHJcbiAgfVxyXG59XHJcblxyXG5hc3luYyBmdW5jdGlvbiBpbml0KCkge1xyXG4gIGxldCBzdGF0ZSA9IGF3YWl0IHJ1bnRpbWVTZW5kTWVzc2FnZSh7IG1lc3NhZ2U6IEdFVF9TVEFURSB9KTtcclxuICB1cGRhdGVDb250ZW50KHN0YXRlKTtcclxufVxyXG5cclxuY2hyb21lLnJ1bnRpbWUub25NZXNzYWdlLmFkZExpc3RlbmVyKG9uTWVzc2FnZSk7XHJcblxyXG5pbml0KCk7XHJcbiJdLCJuYW1lcyI6WyIkNzY4NTc5ZjBkZmMwN2EzNSRleHBvcnQkNjQ0NmExODZkMDllMzc5ZSIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCIkNzY4NTc5ZjBkZmMwN2EzNSRleHBvcnQkNWU4NzA3ODg4YTg3ZDY5NSIsImh1ZSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJjaG9zZW5JZCIsImNvbG9yIiwic3dhdGNoIiwiaHNsIiwibGlnaHRuZXNzU2hpZnQiLCJodWVIb3ZlcmVkIiwiaHVlVmlzaXRlZCIsImFscGhhIiwiJDc2ODU3OWYwZGZjMDdhMzUkZXhwb3J0JGZiNzY5ODU1MGI0MWY3MWEiLCIkNzY4NTc5ZjBkZmMwN2EzNSRleHBvcnQkNzg5NjFlYTgxY2FiMDFhIiwic3RhdGUiLCJhY3RpdmVUYWJIb3N0bmFtZSIsImFjdGl2ZVRhYklkIiwiaG9zdHMiLCJpbmNsdWRlcyIsIiQzM2JkNDlmMjhlMWZjNTIxJGV4cG9ydCRlNmQwZWFiODRmY2IxNzExIiwiJDg3MWQ5NGJkODdjN2I4ZDkkdmFyJGNjU3R5bGUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsIiQ4NzFkOTRiZDg3YzdiOGQ5JHZhciRvYnNlcnZlciIsIk11dGF0aW9uT2JzZXJ2ZXIiLCIkODcxZDk0YmQ4N2M3YjhkOSR2YXIkb2JzZXJ2ZXJDb25maWciLCJhdHRyaWJ1dGVzIiwiYXR0cmlidXRlRmlsdGVyIiwiJDg3MWQ5NGJkODdjN2I4ZDkkdmFyJGNzcyIsIm5vdElkIiwiZmciLCJiZyIsImxpIiwibWVzc2FnZSIsImNocm9tZSIsInJ1bnRpbWUiLCJzZW5kTWVzc2FnZSIsImJyb3dzZXIiXSwidmVyc2lvbiI6MywiZmlsZSI6ImNvbnRlbnQuSEFTSF9SRUZfNjY5ZmFjODViNzRjYmRlNi5qcy5tYXAifQ==
