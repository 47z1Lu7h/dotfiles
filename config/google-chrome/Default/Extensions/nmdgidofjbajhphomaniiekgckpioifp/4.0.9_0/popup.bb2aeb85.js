const e=/Chrome/.test(navigator.userAgent);function t(e,t,s,n){let a={swatch:{hue:e,saturation:t,lightness:s,chosenId:n},hsl:"",lightnessShift:"",hueHovered:"",hueVisited:"",alpha:""};return function(e){e.hsl=`hsl(${e.swatch.hue}, ${e.swatch.saturation}%, ${e.swatch.lightness}%)`,e.swatch.lightness>=50?e.lightnessShift=`hsl(${e.swatch.hue}, ${e.swatch.saturation}%, ${e.swatch.lightness-10}%)`:e.lightnessShift=`hsl(${e.swatch.hue}, ${e.swatch.saturation}%, ${e.swatch.lightness+10}%)`;e.hueHovered=`hsl(${e.swatch.hue+40}, ${e.swatch.saturation+20}%, ${e.swatch.lightness}%)`,e.hueVisited=`hsl(${e.swatch.hue-40}, ${e.swatch.saturation+20}%, ${e.swatch.lightness}%)`,e.alpha=`hsla(${e.swatch.hue}, ${e.swatch.saturation}%, ${e.swatch.lightness}%, 0.5)`}(a),a}function s(e){return!!e.activeTabHostname&&(!!e.activeTabId&&!!e.hosts.includes(e.activeTabHostname))}function n(t){return e?chrome.runtime.sendMessage(t):browser.runtime.sendMessage(t)}t(0,0,80,"zero"),t(0,0,25,"zero"),t(68,80,80,"2-6");let a=document.getElementById("lightness"),i=document.getElementById("lightness-value"),l=document.getElementById("change-colors"),o=document.getElementById("change-colors-label"),c=document.getElementById("fore"),h=document.getElementById("back"),d=document.getElementById("link"),r=document.getElementById("reset"),u=document.getElementById("fore-swatch"),g=document.getElementById("back-swatch"),f=document.getElementById("link-swatch");function m(){n({message:"SET_ACTIVE_BUTTON",payload:"fore"})}function v(){n({message:"SET_ACTIVE_BUTTON",payload:"back"})}function w(){n({message:"SET_ACTIVE_BUTTON",payload:"link"})}function y(e,t,s,n,a,i,l){return{x:e,y:t,id:s,hovered:!1,radius:n,hue:a,saturation:i,lightness:l,hsl:`hsl(${a}, ${i}%, ${l}%)`}}function b(e,t,s,n){e.hue=t,e.saturation=s,e.lightness=n,e.hsl=`hsl(${t}, ${s}%, ${n}%)`}l.onclick=()=>{n({message:"CHANGE_COLORS",payload:l.checked})},r.onclick=function(){n({message:"RESET"})},a.addEventListener("input",(function(){i.childNodes[0].nodeValue=`${this.value}%`})),a.addEventListener("change",(function(){i.childNodes[0].nodeValue=`${this.value}%`,n({message:"CHANGE_LIGHTNESS",payload:parseInt(this.value)})})),u.onclick=m,c.onclick=m,g.onclick=v,h.onclick=v,f.onclick=w,d.onclick=w;var E=document.getElementById("cc-canvas"),$=E.getContext("2d");E.width=E.offsetWidth,E.height=E.offsetHeight;var k=E.offsetHeight,I=E.width/2,T=E.height/2,B=k/6,S=k/30,C=k/14,p=k/30;let A=I-.4*E.width,L=T+.3*E.width,_=L-30,H=.5*B;var x={};function N(e){return e*(Math.PI/180)}async function z(e){$.fillStyle="white",$.clearRect(0,0,E.width,E.height),$.fillStyle="black",$.textAlign="center",$.font="16pt Helvetica",$.fillText("Gray",A,_),$.beginPath(),$.arc(A,L,H,0,2*Math.PI,!0),$.fillStyle=`hsl(0, 0%, ${e.lightness}%)`,$.fill(),$.strokeStyle="#555555",("fore"===e.activeBtn&&"zero"===e.fg.swatch.chosenId||"back"===e.activeBtn&&"zero"===e.bg.swatch.chosenId||"link"===e.activeBtn&&"zero"===e.li.swatch.chosenId)&&($.strokeStyle="#000000",$.lineWidth=5,$.setLineDash([5,2])),$.stroke(),$.setLineDash([0]),$.lineWidth=1,x.zero?b(x.zero,0,0,e.lightness):x.zero=y(A,L,"zero",H,0,0,e.lightness);for(var t=0;t<3;t++){let n=16+8*t;for(var s=0;s<n;s++){let a=360/n,i=I+(B+C+t*p+t*S*2)*Math.cos(N(a*s)),l=T+(B+C+t*p+t*S*2)*Math.sin(N(a*s)),o=a*s,c=33.333333333333336*t+33.33333333333333,h=`${t}-${s}`;$.beginPath(),$.ellipse(i,l,S,1.5*S,N(o-45),0,2*Math.PI,!1),$.fillStyle=`hsl(${o}, ${c}%, ${e.lightness}%)`,$.fill(),x[h]?b(x[h],o,c,e.lightness):x[h]=y(i,l,h,S,o,c,e.lightness),$.strokeStyle="#555555",("fore"===e.activeBtn&&e.fg.swatch.chosenId===h||"back"===e.activeBtn&&e.bg.swatch.chosenId===h||"link"===e.activeBtn&&e.li.swatch.chosenId===h)&&($.strokeStyle="#000000",$.lineWidth=5,$.setLineDash([5,2])),$.stroke(),$.setLineDash([0]),$.lineWidth=1}}}function O(e,t,s){for(var n in e){var a=e[n].x-e[n].radius,i=e[n].x+e[n].radius,l=e[n].y-e[n].radius,o=e[n].y+e[n].radius;if(i>=t&&a<=t&&o>=s&&l<=s)return e[n]}return null}async function P(){let e=await n({message:"GET_STATE"});u.style.background=e.fg.hsl,g.style.background=e.bg.hsl,f.style.background=e.li.hsl,l.checked=s(e),a.value=e.lightness.toString(),i.childNodes[0].nodeValue=`${e.lightness}%`,-9999===e.activeTabId?(l.setAttribute("disabled","disabled"),o.textContent="Please reload this tab or activate a new tab."):e.invalidUrl?(l.setAttribute("disabled","disabled"),o.textContent="Color Changer can't work on this page."):e.lostConnection?(l.setAttribute("disabled","disabled"),o.textContent="Please reload this page."):(l.removeAttribute("disabled"),o.textContent="Change Colors"),async function(e){c.classList.remove("active-btn"),h.classList.remove("active-btn"),d.classList.remove("active-btn"),document.getElementById(e.activeBtn).classList.add("active-btn")}(e),z(e)}E.onclick=function(e){var t=O(x,e.offsetX,e.offsetY);t&&n({message:"UPDATE_CHOSEN_COLOR",payload:t})},E.onmouseout=async function(){let e=await n({message:"GET_STATE"});null,z(e)},E.onmousemove=async function(e){var t=O(x,e.offsetX,e.offsetY);if(t){let e=await n({message:"GET_STATE"});t.id,z(e),E.style.cursor="pointer"}else E.style.cursor="default"},chrome.storage.onChanged.addListener(P),window.onload=P;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVVFLElBQUksYSxDQWtPeERDLENBQXFCL0csR0FDckJtRSxFQUFXbkUsRSxDQTNEYjJDLEVBQU9SLFFBQVUsU0FBVTZFLEdBQ3pCLElBQUl4SCxFQUFTb0csRUFBZS9CLEVBQVVtRCxFQUFFQyxRQUFTRCxFQUFFRSxTQUM5QzFILEdBQ0xhLEVBQW1CLENBQUVDLFFEN05ZLHNCQzZOa0JtQixRQUFTakMsRyxFQUc5RG1ELEVBQU93RSxXQUFhakQsaUJBQ2xCLElBQUlsRSxRQUFjSyxFQUFtQixDQUFFQyxRRHJPaEIsY0NzT2IsS0FDVjZELEVBQVduRSxFLEVBR2IyQyxFQUFPeUUsWUFBY2xELGVBQWdCOEMsR0FDbkMsSUFBSXhILEVBQVNvRyxFQUFlL0IsRUFBVW1ELEVBQUVDLFFBQVNELEVBQUVFLFNBRW5ELEdBQUkxSCxFQUFRLENBQ1YsSUFBSVEsUUFBY0ssRUFBbUIsQ0FBRUMsUUQ5T2xCLGNDK09YZCxFQUFPdUMsR0FFakJvQyxFQUFXbkUsR0FFWDJDLEVBQU95RCxNQUFNaUIsT0FBUyxTLE1BRXRCMUUsRUFBT3lELE1BQU1pQixPQUFTLFMsRUF1QzFCOUcsT0FBTytHLFFBQVFDLFVBQVVDLFlBQVlyQixHQUVyQ3NCLE9BQU9DLE9BQVN2QiIsInNvdXJjZXMiOlsidXRpbHMudHMiLCJjb25zdGFudHMudHMiLCJwb3B1cC9wb3B1cC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb2xvciwgTWVzc2FnZSwgU3RhdGUgfSBmcm9tIFwiLi9pbnRlcmZhY2VzXCI7XHJcblxyXG5leHBvcnQgY29uc3QgaXNDaHJvbWUgPSAvQ2hyb21lLy50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNvbG9yKGh1ZTogbnVtYmVyLCBzYXR1cmF0aW9uOiBudW1iZXIsIGxpZ2h0bmVzczogbnVtYmVyLCBjaG9zZW5JZDogc3RyaW5nKTogQ29sb3Ige1xyXG4gIGxldCBjb2xvcjogQ29sb3IgPSB7XHJcbiAgICBzd2F0Y2g6IHtcclxuICAgICAgaHVlLFxyXG4gICAgICBzYXR1cmF0aW9uLFxyXG4gICAgICBsaWdodG5lc3MsXHJcbiAgICAgIGNob3NlbklkLFxyXG4gICAgfSxcclxuICAgIGhzbDogXCJcIixcclxuICAgIGxpZ2h0bmVzc1NoaWZ0OiBcIlwiLFxyXG4gICAgaHVlSG92ZXJlZDogXCJcIixcclxuICAgIGh1ZVZpc2l0ZWQ6IFwiXCIsXHJcbiAgICBhbHBoYTogXCJcIixcclxuICB9XHJcbiAgc2V0SHNsU3RyaW5ncyhjb2xvcik7XHJcbiAgcmV0dXJuIGNvbG9yO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2V0SHNsU3RyaW5ncyhjb2xvcjogQ29sb3IpIHtcclxuICBjb2xvci5oc2wgPSBgaHNsKCR7Y29sb3Iuc3dhdGNoLmh1ZX0sICR7Y29sb3Iuc3dhdGNoLnNhdHVyYXRpb259JSwgJHtjb2xvci5zd2F0Y2gubGlnaHRuZXNzfSUpYDtcclxuICBpZiAoY29sb3Iuc3dhdGNoLmxpZ2h0bmVzcyA+PSA1MCkge1xyXG4gICAgY29sb3IubGlnaHRuZXNzU2hpZnQgPSBgaHNsKCR7Y29sb3Iuc3dhdGNoLmh1ZX0sICR7Y29sb3Iuc3dhdGNoLnNhdHVyYXRpb259JSwgJHtjb2xvci5zd2F0Y2gubGlnaHRuZXNzIC0gMTB9JSlgO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjb2xvci5saWdodG5lc3NTaGlmdCA9IGBoc2woJHtjb2xvci5zd2F0Y2guaHVlfSwgJHtjb2xvci5zd2F0Y2guc2F0dXJhdGlvbn0lLCAke2NvbG9yLnN3YXRjaC5saWdodG5lc3MgKyAxMH0lKWA7XHJcbiAgfVxyXG4gIGNvbG9yLmh1ZUhvdmVyZWQgPSBgaHNsKCR7Y29sb3Iuc3dhdGNoLmh1ZSArIDQwICUgMzYwfSwgJHtjb2xvci5zd2F0Y2guc2F0dXJhdGlvbiArIDIwfSUsICR7Y29sb3Iuc3dhdGNoLmxpZ2h0bmVzc30lKWA7XHJcbiAgY29sb3IuaHVlVmlzaXRlZCA9IGBoc2woJHtjb2xvci5zd2F0Y2guaHVlIC0gNDAgJSAzNjB9LCAke2NvbG9yLnN3YXRjaC5zYXR1cmF0aW9uICsgMjB9JSwgJHtjb2xvci5zd2F0Y2gubGlnaHRuZXNzfSUpYDtcclxuICBjb2xvci5hbHBoYSA9IGBoc2xhKCR7Y29sb3Iuc3dhdGNoLmh1ZX0sICR7Y29sb3Iuc3dhdGNoLnNhdHVyYXRpb259JSwgJHtjb2xvci5zd2F0Y2gubGlnaHRuZXNzfSUsIDAuNSlgO1xyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gc2hvdWxkQ2hhbmdlQ29sb3JzKHN0YXRlOiBTdGF0ZSk6IGJvb2xlYW4ge1xyXG4gIGlmICghc3RhdGUuYWN0aXZlVGFiSG9zdG5hbWUpIHJldHVybiBmYWxzZTtcclxuICBpZiAoIXN0YXRlLmFjdGl2ZVRhYklkKSByZXR1cm4gZmFsc2U7XHJcblxyXG4gIGlmIChzdGF0ZS5ob3N0cy5pbmNsdWRlcyhzdGF0ZS5hY3RpdmVUYWJIb3N0bmFtZSkpIHtcclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfVxyXG59XHJcblxyXG4vKiogV29ya2Fyb3VuZCBmb3Igbm90IGJlaW5nIGFibGUgdG8gYXdhaXQgYW4gYXN5bmMgbWVzc2FnZSB3aXRoIGNocm9tZS5ydW50aW1lIGluIEZpcmVmb3guXHJcbiAqIGh0dHBzOi8vYnVnemlsbGEubW96aWxsYS5vcmcvc2hvd19idWcuY2dpP2lkPTEyMjgwNDRcclxuKi9cclxuZXhwb3J0IGZ1bmN0aW9uIHJ1bnRpbWVTZW5kTWVzc2FnZShtZXNzYWdlOiBNZXNzYWdlKTogUHJvbWlzZTxhbnk+IHtcclxuICBpZiAoaXNDaHJvbWUpIHtcclxuICAgIHJldHVybiBjaHJvbWUucnVudGltZS5zZW5kTWVzc2FnZShtZXNzYWdlKTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGJyb3dzZXIucnVudGltZS5zZW5kTWVzc2FnZShtZXNzYWdlKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBzYXZlU3RhdGUoc3RhdGU6IFN0YXRlKSB7XHJcbiAgaWYgKGlzQ2hyb21lKSB7XHJcbiAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7ICdjb2xvckNoYW5nZXJTdGF0ZSc6IHN0YXRlIH0pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBicm93c2VyLnN0b3JhZ2Uuc3luYy5zZXQoeyAnY29sb3JDaGFuZ2VyU3RhdGUnOiBzdGF0ZSB9KTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBnZXRTdGF0ZSgpIHtcclxuICBpZiAoaXNDaHJvbWUpIHtcclxuICAgIHJldHVybiBjaHJvbWUuc3RvcmFnZS5zeW5jLmdldChbJ2NvbG9yQ2hhbmdlclN0YXRlJ10pO1xyXG4gIH0gZWxzZSB7XHJcbiAgICByZXR1cm4gYnJvd3Nlci5zdG9yYWdlLnN5bmMuZ2V0KFsnY29sb3JDaGFuZ2VyU3RhdGUnXSk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgZnVuY3Rpb24gdGFic1F1ZXJ5KHF1ZXJ5OiBhbnkpIHtcclxuICBpZiAoaXNDaHJvbWUpIHtcclxuICAgIHJldHVybiBjaHJvbWUudGFicy5xdWVyeShxdWVyeSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiBicm93c2VyLnRhYnMucXVlcnkocXVlcnkpIGFzIFByb21pc2U8Y2hyb21lLnRhYnMuVGFiW10+O1xyXG4gIH1cclxufVxyXG4iLCJpbXBvcnQgeyBTdGF0ZSB9IGZyb20gXCIuL2ludGVyZmFjZXNcIjtcclxuaW1wb3J0IHsgY3JlYXRlQ29sb3IgfSBmcm9tIFwiLi91dGlsc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IEdFVF9TVEFURSA9IFwiR0VUX1NUQVRFXCI7XHJcbmV4cG9ydCBjb25zdCBVUERBVEVfQ09OVEVOVCA9IFwiVVBEQVRFX0NPTlRFTlRcIjtcclxuZXhwb3J0IGNvbnN0IENIQU5HRV9DT0xPUlMgPSBcIkNIQU5HRV9DT0xPUlNcIjtcclxuZXhwb3J0IGNvbnN0IFNFVF9BQ1RJVkVfQlVUVE9OID0gXCJTRVRfQUNUSVZFX0JVVFRPTlwiO1xyXG5leHBvcnQgY29uc3QgVVBEQVRFX0NIT1NFTl9DT0xPUiA9IFwiVVBEQVRFX0NIT1NFTl9DT0xPUlwiO1xyXG5leHBvcnQgY29uc3QgQ0hBTkdFX0xJR0hUTkVTUyA9IFwiQ0hBTkdFX0xJR0hUTkVTU1wiO1xyXG5leHBvcnQgY29uc3QgUkVTRVQgPSBcIlJFU0VUXCI7XHJcbmV4cG9ydCBjb25zdCBDT05URU5UX0NPTk5FQ1RFRCA9IFwiQ09OVEVOVF9DT05ORUNURURcIjtcclxuZXhwb3J0IGNvbnN0IElOVkFMSURfVEFCID0gLTk5OTk7XHJcblxyXG5leHBvcnQgY29uc3QgRk9SRV9CVE4gPSBcImZvcmVcIjtcclxuZXhwb3J0IGNvbnN0IEJBQ0tfQlROID0gXCJiYWNrXCI7XHJcbmV4cG9ydCBjb25zdCBMSU5LX0JUTiA9IFwibGlua1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IENPTE9SX0NIQU5HRVJfU1RZTEVfSUQgPSBcImNvbG9yLWNoYW5nZXItc3R5bGVcIjtcclxuZXhwb3J0IGNvbnN0IENPTE9SX0NIQU5HRVJfQ0xBU1NfTkFNRSA9IFwiY29sb3ItY2hhbmdlci12NFwiO1xyXG5cclxuZXhwb3J0IGNvbnN0IERFRkFVTFRfU1RBVEU6IFN0YXRlID0ge1xyXG4gIGFjdGl2ZVRhYklkOiBJTlZBTElEX1RBQixcclxuICBhY3RpdmVUYWJIb3N0bmFtZTogXCJcIixcclxuICBmZzogY3JlYXRlQ29sb3IoMCwgMCwgODAsICd6ZXJvJyksXHJcbiAgYmc6IGNyZWF0ZUNvbG9yKDAsIDAsIDI1LCAnemVybycpLFxyXG4gIGxpOiBjcmVhdGVDb2xvcig2OCwgODAsIDgwLCAnMi02JyksXHJcbiAgYWN0aXZlQnRuOiBGT1JFX0JUTixcclxuICBsaWdodG5lc3M6IDgwLFxyXG4gIGhvc3RzOiBbXSxcclxuICBsb3N0Q29ubmVjdGlvbjogZmFsc2UsXHJcbiAgaW52YWxpZFVybDogZmFsc2UsXHJcbn1cclxuIiwiaW1wb3J0IHsgQkFDS19CVE4sIENIQU5HRV9DT0xPUlMsIENIQU5HRV9MSUdIVE5FU1MsIEZPUkVfQlROLCBHRVRfU1RBVEUsIElOVkFMSURfVEFCLCBMSU5LX0JUTiwgUkVTRVQsIFNFVF9BQ1RJVkVfQlVUVE9OLCBVUERBVEVfQ0hPU0VOX0NPTE9SIH0gZnJvbSBcIi4uL2NvbnN0YW50c1wiO1xyXG5pbXBvcnQgeyBDYW52YXNTd2F0Y2gsIFN0YXRlIH0gZnJvbSBcIi4uL2ludGVyZmFjZXNcIjtcclxuaW1wb3J0IHsgcnVudGltZVNlbmRNZXNzYWdlLCBzaG91bGRDaGFuZ2VDb2xvcnMgfSBmcm9tIFwiLi4vdXRpbHNcIjtcclxuXHJcbmxldCBsaWdodG5lc3NTbGlkZXIgPSA8SFRNTElucHV0RWxlbWVudD5kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImxpZ2h0bmVzc1wiKSE7XHJcbmxldCBsaWdodG5lc3NWYWx1ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwibGlnaHRuZXNzLXZhbHVlXCIpITtcclxuXHJcbmxldCBjaGFuZ2VDb2xvcnNDaGVja2JveCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhbmdlLWNvbG9yc1wiKSE7XHJcbmxldCBjaGFuZ2VDb2xvcnNMYWJlbCA9IDxIVE1MSW5wdXRFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhbmdlLWNvbG9ycy1sYWJlbFwiKSE7XHJcblxyXG5sZXQgZm9yZUJ0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKEZPUkVfQlROKSE7XHJcbmxldCBiYWNrQnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoQkFDS19CVE4pITtcclxubGV0IGxpbmtCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChMSU5LX0JUTikhO1xyXG5sZXQgcmVzZXRCdG4gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInJlc2V0XCIpITtcclxuXHJcbmxldCBmb3JlU3dhdGNoID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYCR7Rk9SRV9CVE59LXN3YXRjaGApITtcclxubGV0IGJhY2tTd2F0Y2ggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChgJHtCQUNLX0JUTn0tc3dhdGNoYCkhO1xyXG5sZXQgbGlua1N3YXRjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGAke0xJTktfQlROfS1zd2F0Y2hgKSE7XHJcblxyXG5jaGFuZ2VDb2xvcnNDaGVja2JveC5vbmNsaWNrID0gKCkgPT4ge1xyXG4gIHJ1bnRpbWVTZW5kTWVzc2FnZSh7IG1lc3NhZ2U6IENIQU5HRV9DT0xPUlMsIHBheWxvYWQ6IGNoYW5nZUNvbG9yc0NoZWNrYm94LmNoZWNrZWQgfSk7XHJcbn07XHJcblxyXG5yZXNldEJ0bi5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gIHJ1bnRpbWVTZW5kTWVzc2FnZSh7IG1lc3NhZ2U6IFJFU0VUIH0pO1xyXG59XHJcblxyXG5saWdodG5lc3NTbGlkZXIuYWRkRXZlbnRMaXN0ZW5lcignaW5wdXQnLCBmdW5jdGlvbiAoKSB7XHJcbiAgbGlnaHRuZXNzVmFsdWUuY2hpbGROb2Rlc1swXS5ub2RlVmFsdWUgPSBgJHt0aGlzLnZhbHVlfSVgO1xyXG59KVxyXG5cclxubGlnaHRuZXNzU2xpZGVyLmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIGZ1bmN0aW9uICgpIHtcclxuICBsaWdodG5lc3NWYWx1ZS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9IGAke3RoaXMudmFsdWV9JWA7XHJcbiAgcnVudGltZVNlbmRNZXNzYWdlKHsgbWVzc2FnZTogQ0hBTkdFX0xJR0hUTkVTUywgcGF5bG9hZDogcGFyc2VJbnQodGhpcy52YWx1ZSkgfSk7XHJcbn0pXHJcblxyXG5mdW5jdGlvbiBvbkNsaWNrRm9yZWdyb3VuZCgpIHtcclxuICBydW50aW1lU2VuZE1lc3NhZ2UoeyBtZXNzYWdlOiBTRVRfQUNUSVZFX0JVVFRPTiwgcGF5bG9hZDogRk9SRV9CVE4gfSk7XHJcbn1cclxuZnVuY3Rpb24gb25DbGlja0JhY2tncm91bmQoKSB7XHJcbiAgcnVudGltZVNlbmRNZXNzYWdlKHsgbWVzc2FnZTogU0VUX0FDVElWRV9CVVRUT04sIHBheWxvYWQ6IEJBQ0tfQlROIH0pO1xyXG59XHJcbmZ1bmN0aW9uIG9uQ2xpY2tMaW5rKCkge1xyXG4gIHJ1bnRpbWVTZW5kTWVzc2FnZSh7IG1lc3NhZ2U6IFNFVF9BQ1RJVkVfQlVUVE9OLCBwYXlsb2FkOiBMSU5LX0JUTiB9KTtcclxufVxyXG5cclxuZm9yZVN3YXRjaC5vbmNsaWNrID0gb25DbGlja0ZvcmVncm91bmQ7XHJcbmZvcmVCdG4ub25jbGljayA9IG9uQ2xpY2tGb3JlZ3JvdW5kO1xyXG5iYWNrU3dhdGNoLm9uY2xpY2sgPSBvbkNsaWNrQmFja2dyb3VuZDtcclxuYmFja0J0bi5vbmNsaWNrID0gb25DbGlja0JhY2tncm91bmQ7XHJcbmxpbmtTd2F0Y2gub25jbGljayA9IG9uQ2xpY2tMaW5rO1xyXG5saW5rQnRuLm9uY2xpY2sgPSBvbkNsaWNrTGluaztcclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHNldEFjdGl2ZUNvbG9yQnV0dG9uKHN0YXRlOiBTdGF0ZSkge1xyXG4gIGZvcmVCdG4uY2xhc3NMaXN0LnJlbW92ZShcImFjdGl2ZS1idG5cIik7XHJcbiAgYmFja0J0bi5jbGFzc0xpc3QucmVtb3ZlKFwiYWN0aXZlLWJ0blwiKTtcclxuICBsaW5rQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmUtYnRuXCIpO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHN0YXRlLmFjdGl2ZUJ0bikhLmNsYXNzTGlzdC5hZGQoXCJhY3RpdmUtYnRuXCIpO1xyXG59XHJcblxyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vIENhbnZhc1xyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbmZ1bmN0aW9uIGNyZWF0ZUNhbnZhc1N3YXRjaCh4OiBudW1iZXIsIHk6IG51bWJlciwgaWQ6IHN0cmluZywgcmFkaXVzOiBudW1iZXIsIGh1ZTogbnVtYmVyLCBzYXR1cmF0aW9uOiBudW1iZXIsIGxpZ2h0bmVzczogbnVtYmVyKTogQ2FudmFzU3dhdGNoIHtcclxuICByZXR1cm4ge1xyXG4gICAgeCxcclxuICAgIHksXHJcbiAgICBpZCxcclxuICAgIGhvdmVyZWQ6IGZhbHNlLFxyXG4gICAgcmFkaXVzLFxyXG4gICAgaHVlLFxyXG4gICAgc2F0dXJhdGlvbixcclxuICAgIGxpZ2h0bmVzcyxcclxuICAgIGhzbDogYGhzbCgke2h1ZX0sICR7c2F0dXJhdGlvbn0lLCAke2xpZ2h0bmVzc30lKWAsXHJcbiAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVDYW52YXNTd2F0Y2goc3dhdGNoOiBDYW52YXNTd2F0Y2gsIGh1ZTogbnVtYmVyLCBzYXR1cmF0aW9uOiBudW1iZXIsIGxpZ2h0bmVzczogbnVtYmVyKSB7XHJcbiAgc3dhdGNoLmh1ZSA9IGh1ZTtcclxuICBzd2F0Y2guc2F0dXJhdGlvbiA9IHNhdHVyYXRpb247XHJcbiAgc3dhdGNoLmxpZ2h0bmVzcyA9IGxpZ2h0bmVzcztcclxuICBzd2F0Y2guaHNsID0gYGhzbCgke2h1ZX0sICR7c2F0dXJhdGlvbn0lLCAke2xpZ2h0bmVzc30lKWA7XHJcbn07XHJcblxyXG52YXIgY2FudmFzID0gPEhUTUxDYW52YXNFbGVtZW50PmRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2MtY2FudmFzXCIpITtcclxudmFyIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KFwiMmRcIikhO1xyXG5jYW52YXMud2lkdGggPSBjYW52YXMub2Zmc2V0V2lkdGg7XHJcbmNhbnZhcy5oZWlnaHQgPSBjYW52YXMub2Zmc2V0SGVpZ2h0O1xyXG52YXIgY2FudmFzSGVpZ2h0ID0gY2FudmFzLm9mZnNldEhlaWdodDtcclxuXHJcbnZhciBvcmlnaW5YID0gY2FudmFzLndpZHRoIC8gMjtcclxudmFyIG9yaWdpblkgPSBjYW52YXMuaGVpZ2h0IC8gMjtcclxuXHJcbnZhciBiaWdSYWRpdXMgPSBjYW52YXNIZWlnaHQgLyA2O1xyXG52YXIgbGl0dGxlUmFkaXVzID0gY2FudmFzSGVpZ2h0IC8gMzA7XHJcbnZhciBlbGxpcHNlTGVuZ3RoID0gMS41O1xyXG5cclxudmFyIGdhcCA9IGNhbnZhc0hlaWdodCAvIDE0O1xyXG52YXIgbGl0dGxlR2FwID0gY2FudmFzSGVpZ2h0IC8gMzA7XHJcbnZhciBudW1Td2F0Y2hlcyA9IDE2O1xyXG52YXIgc3RlcHMgPSBudW1Td2F0Y2hlcyAvIDI7XHJcbnZhciByaW5ncyA9IDM7XHJcbnZhciBzYXR1cmF0aW9uU3RlcHMgPSAxMDAgLyByaW5ncztcclxudmFyIHN0cm9rZUNvbG9yID0gXCIjNTU1NTU1XCI7XHJcblxyXG5sZXQgc3Ryb2tlSG92ZXJXaWR0aCA9IDU7XHJcblxyXG5sZXQgemVyb1NhdE9mZnNldFggPSBvcmlnaW5YIC0gY2FudmFzLndpZHRoICogMC40MDtcclxubGV0IHplcm9TYXRPZmZzZXRZID0gb3JpZ2luWSArIGNhbnZhcy53aWR0aCAqIDAuMztcclxuXHJcbmxldCB6ZXJvU2F0VGV4dE9mZnNldFkgPSB6ZXJvU2F0T2Zmc2V0WSAtIDMwO1xyXG5sZXQgc2F0UmFkaXVzID0gYmlnUmFkaXVzICogMC41O1xyXG5cclxudmFyIGhvdmVySWQgPSBudWxsO1xyXG5cclxudmFyIHN3YXRjaGVzOiB7IFtpbmRleDogc3RyaW5nXTogQ2FudmFzU3dhdGNoIH0gPSB7fTtcclxuXHJcbmZ1bmN0aW9uIHRvUmFkcyhkZWdyZWVzOiBudW1iZXIpIHtcclxuICByZXR1cm4gZGVncmVlcyAqIChNYXRoLlBJIC8gMTgwKTtcclxufVxyXG5cclxuYXN5bmMgZnVuY3Rpb24gZHJhd0NhbnZhcyhzdGF0ZTogU3RhdGUpIHtcclxuICBjdHguZmlsbFN0eWxlID0gXCJ3aGl0ZVwiO1xyXG4gIGN0eC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTtcclxuXHJcbiAgY3R4LmZpbGxTdHlsZSA9IFwiYmxhY2tcIjtcclxuICBjdHgudGV4dEFsaWduID0gXCJjZW50ZXJcIjtcclxuICBjdHguZm9udCA9ICcxNnB0IEhlbHZldGljYSc7XHJcbiAgY3R4LmZpbGxUZXh0KFwiR3JheVwiLCB6ZXJvU2F0T2Zmc2V0WCwgemVyb1NhdFRleHRPZmZzZXRZKTtcclxuXHJcbiAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gIGN0eC5hcmMoemVyb1NhdE9mZnNldFgsIHplcm9TYXRPZmZzZXRZLCBzYXRSYWRpdXMsIDAsIDIgKiBNYXRoLlBJLCB0cnVlKTtcclxuICBjdHguZmlsbFN0eWxlID0gYGhzbCgwLCAwJSwgJHtzdGF0ZS5saWdodG5lc3N9JSlgO1xyXG4gIGN0eC5maWxsKCk7XHJcbiAgY3R4LnN0cm9rZVN0eWxlID0gc3Ryb2tlQ29sb3I7XHJcbiAgLy8gaG92ZXJJZCA9PT0gXCJ6ZXJvXCIgPyBjdHgubGluZVdpZHRoID0gc3Ryb2tlSG92ZXJXaWR0aCA6IGN0eC5saW5lV2lkdGggPSAxO1xyXG5cclxuICBpZiAoXHJcbiAgICAoc3RhdGUuYWN0aXZlQnRuID09PSBGT1JFX0JUTiAmJiBzdGF0ZS5mZy5zd2F0Y2guY2hvc2VuSWQgPT09IFwiemVyb1wiKSB8fFxyXG4gICAgKHN0YXRlLmFjdGl2ZUJ0biA9PT0gQkFDS19CVE4gJiYgc3RhdGUuYmcuc3dhdGNoLmNob3NlbklkID09PSBcInplcm9cIikgfHxcclxuICAgIChzdGF0ZS5hY3RpdmVCdG4gPT09IExJTktfQlROICYmIHN0YXRlLmxpLnN3YXRjaC5jaG9zZW5JZCA9PT0gXCJ6ZXJvXCIpKSB7XHJcbiAgICBjdHguc3Ryb2tlU3R5bGUgPSBcIiMwMDAwMDBcIjtcclxuICAgIGN0eC5saW5lV2lkdGggPSBzdHJva2VIb3ZlcldpZHRoO1xyXG4gICAgY3R4LnNldExpbmVEYXNoKFs1LCAyXSk7XHJcbiAgfVxyXG4gIGN0eC5zdHJva2UoKTtcclxuICBjdHguc2V0TGluZURhc2goWzBdKTtcclxuICBjdHgubGluZVdpZHRoID0gMTtcclxuXHJcbiAgaWYgKHN3YXRjaGVzW1wiemVyb1wiXSkge1xyXG4gICAgdXBkYXRlQ2FudmFzU3dhdGNoKHN3YXRjaGVzW1wiemVyb1wiXSwgMCwgMCwgc3RhdGUubGlnaHRuZXNzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgc3dhdGNoZXNbXCJ6ZXJvXCJdID0gY3JlYXRlQ2FudmFzU3dhdGNoKHplcm9TYXRPZmZzZXRYLCB6ZXJvU2F0T2Zmc2V0WSwgXCJ6ZXJvXCIsIHNhdFJhZGl1cywgMCwgMCwgc3RhdGUubGlnaHRuZXNzKTtcclxuICB9XHJcblxyXG4gIGZvciAodmFyIGogPSAwOyBqIDwgcmluZ3M7IGorKykge1xyXG4gICAgbGV0IGFkanVzdGVkTnVtU3dhdGNoZXMgPSBudW1Td2F0Y2hlcyArIChqICogc3RlcHMpO1xyXG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBhZGp1c3RlZE51bVN3YXRjaGVzOyBpKyspIHtcclxuICAgICAgbGV0IGFuZ2xlID0gMzYwIC8gYWRqdXN0ZWROdW1Td2F0Y2hlcztcclxuICAgICAgbGV0IHggPSBvcmlnaW5YICsgKChiaWdSYWRpdXMgKyBnYXAgKyAoaiAqIGxpdHRsZUdhcCkgKyAoaiAqIGxpdHRsZVJhZGl1cyAqIDIpKSAqIE1hdGguY29zKHRvUmFkcyhhbmdsZSAqIGkpKSk7XHJcbiAgICAgIGxldCB5ID0gb3JpZ2luWSArICgoYmlnUmFkaXVzICsgZ2FwICsgKGogKiBsaXR0bGVHYXApICsgKGogKiBsaXR0bGVSYWRpdXMgKiAyKSkgKiBNYXRoLnNpbih0b1JhZHMoYW5nbGUgKiBpKSkpO1xyXG5cclxuICAgICAgbGV0IGh1ZSA9IGFuZ2xlICogaTtcclxuICAgICAgbGV0IHNhdHVyYXRpb24gPSAoaiAqIHNhdHVyYXRpb25TdGVwcyArICgxMDAgLSAoc2F0dXJhdGlvblN0ZXBzICogKHJpbmdzIC0gMSkpKSk7XHJcblxyXG4gICAgICBsZXQgaWQgPSBgJHtqfS0ke2l9YDtcclxuXHJcbiAgICAgIGN0eC5iZWdpblBhdGgoKTtcclxuICAgICAgY3R4LmVsbGlwc2UoeCwgeSwgbGl0dGxlUmFkaXVzLCBsaXR0bGVSYWRpdXMgKiBlbGxpcHNlTGVuZ3RoLCB0b1JhZHMoaHVlIC0gNDUpLCAwLCAyICogTWF0aC5QSSwgZmFsc2UpO1xyXG4gICAgICBjdHguZmlsbFN0eWxlID0gYGhzbCgke2h1ZX0sICR7c2F0dXJhdGlvbn0lLCAke3N0YXRlLmxpZ2h0bmVzc30lKWA7XHJcbiAgICAgIGN0eC5maWxsKCk7XHJcblxyXG4gICAgICBpZiAoc3dhdGNoZXNbaWRdKSB7XHJcbiAgICAgICAgdXBkYXRlQ2FudmFzU3dhdGNoKHN3YXRjaGVzW2lkXSwgaHVlLCBzYXR1cmF0aW9uLCBzdGF0ZS5saWdodG5lc3MpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHN3YXRjaGVzW2lkXSA9IGNyZWF0ZUNhbnZhc1N3YXRjaCh4LCB5LCBpZCwgbGl0dGxlUmFkaXVzLCBodWUsIHNhdHVyYXRpb24sIHN0YXRlLmxpZ2h0bmVzcyk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHN0cm9rZUNvbG9yO1xyXG4gICAgICAvLyBob3ZlcklkID09PSBpZCA/IGN0eC5saW5lV2lkdGggPSBzdHJva2VIb3ZlcldpZHRoIDogY3R4LmxpbmVXaWR0aCA9IDE7XHJcblxyXG4gICAgICBpZiAoKHN0YXRlLmFjdGl2ZUJ0biA9PT0gRk9SRV9CVE4gJiYgc3RhdGUuZmcuc3dhdGNoLmNob3NlbklkID09PSBpZCkgfHxcclxuICAgICAgICAoc3RhdGUuYWN0aXZlQnRuID09PSBCQUNLX0JUTiAmJiBzdGF0ZS5iZy5zd2F0Y2guY2hvc2VuSWQgPT09IGlkKSB8fFxyXG4gICAgICAgIChzdGF0ZS5hY3RpdmVCdG4gPT09IExJTktfQlROICYmIHN0YXRlLmxpLnN3YXRjaC5jaG9zZW5JZCA9PT0gaWQpKSB7XHJcbiAgICAgICAgY3R4LnN0cm9rZVN0eWxlID0gXCIjMDAwMDAwXCI7XHJcbiAgICAgICAgY3R4LmxpbmVXaWR0aCA9IHN0cm9rZUhvdmVyV2lkdGg7XHJcbiAgICAgICAgY3R4LnNldExpbmVEYXNoKFs1LCAyXSk7XHJcbiAgICAgIH1cclxuICAgICAgY3R4LnN0cm9rZSgpO1xyXG4gICAgICBjdHguc2V0TGluZURhc2goWzBdKTtcclxuICAgICAgY3R4LmxpbmVXaWR0aCA9IDE7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvLyBpZiAoaG92ZXJJZCkge1xyXG4gIC8vICAgY3R4LmJlZ2luUGF0aCgpO1xyXG4gIC8vICAgY3R4LmFyYyhvcmlnaW5YLCBvcmlnaW5ZLCBiaWdSYWRpdXMsIDAsIDIgKiBNYXRoLlBJLCBmYWxzZSk7XHJcbiAgLy8gICBjdHguZmlsbFN0eWxlID0gc3dhdGNoZXNbaG92ZXJJZF0uaHNsO1xyXG4gIC8vICAgY3R4LmZpbGwoKTtcclxuICAvLyAgIGN0eC5jbG9zZVBhdGgoKTtcclxuICAvLyAgIGN0eC5saW5lV2lkdGggPSAxO1xyXG4gIC8vICAgY3R4LnN0cm9rZVN0eWxlID0gc3Ryb2tlQ29sb3I7XHJcbiAgLy8gICBjdHguc3Ryb2tlKCk7XHJcbiAgLy8gfVxyXG59XHJcblxyXG5mdW5jdGlvbiBjaGVja0NvbGxpc2lvbihzd2F0Y2hlcywgeCwgeSkge1xyXG4gIGZvciAodmFyIHMgaW4gc3dhdGNoZXMpIHtcclxuICAgIHZhciBsZWZ0ID0gc3dhdGNoZXNbc10ueCAtIHN3YXRjaGVzW3NdLnJhZGl1cztcclxuICAgIHZhciByaWdodCA9IHN3YXRjaGVzW3NdLnggKyBzd2F0Y2hlc1tzXS5yYWRpdXM7XHJcbiAgICB2YXIgdG9wID0gc3dhdGNoZXNbc10ueSAtIHN3YXRjaGVzW3NdLnJhZGl1cztcclxuICAgIHZhciBib3R0b20gPSBzd2F0Y2hlc1tzXS55ICsgc3dhdGNoZXNbc10ucmFkaXVzO1xyXG5cclxuICAgIGlmIChyaWdodCA+PSB4XHJcbiAgICAgICYmIGxlZnQgPD0geFxyXG4gICAgICAmJiBib3R0b20gPj0geVxyXG4gICAgICAmJiB0b3AgPD0geSkge1xyXG4gICAgICByZXR1cm4gc3dhdGNoZXNbc107XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBudWxsO1xyXG59XHJcblxyXG5jYW52YXMub25jbGljayA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgdmFyIHN3YXRjaCA9IGNoZWNrQ29sbGlzaW9uKHN3YXRjaGVzLCBlLm9mZnNldFgsIGUub2Zmc2V0WSk7XHJcbiAgaWYgKCFzd2F0Y2gpIHJldHVybjtcclxuICBydW50aW1lU2VuZE1lc3NhZ2UoeyBtZXNzYWdlOiBVUERBVEVfQ0hPU0VOX0NPTE9SLCBwYXlsb2FkOiBzd2F0Y2ggfSk7XHJcbn1cclxuXHJcbmNhbnZhcy5vbm1vdXNlb3V0ID0gYXN5bmMgZnVuY3Rpb24gKCkge1xyXG4gIGxldCBzdGF0ZSA9IGF3YWl0IHJ1bnRpbWVTZW5kTWVzc2FnZSh7IG1lc3NhZ2U6IEdFVF9TVEFURSB9KTtcclxuICBob3ZlcklkID0gbnVsbDtcclxuICBkcmF3Q2FudmFzKHN0YXRlKTtcclxufVxyXG5cclxuY2FudmFzLm9ubW91c2Vtb3ZlID0gYXN5bmMgZnVuY3Rpb24gKGUpIHtcclxuICB2YXIgc3dhdGNoID0gY2hlY2tDb2xsaXNpb24oc3dhdGNoZXMsIGUub2Zmc2V0WCwgZS5vZmZzZXRZKTtcclxuXHJcbiAgaWYgKHN3YXRjaCkge1xyXG4gICAgbGV0IHN0YXRlID0gYXdhaXQgcnVudGltZVNlbmRNZXNzYWdlKHsgbWVzc2FnZTogR0VUX1NUQVRFIH0pO1xyXG4gICAgaG92ZXJJZCA9IHN3YXRjaC5pZDtcclxuXHJcbiAgICBkcmF3Q2FudmFzKHN0YXRlKTtcclxuXHJcbiAgICBjYW52YXMuc3R5bGUuY3Vyc29yID0gJ3BvaW50ZXInO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjYW52YXMuc3R5bGUuY3Vyc29yID0gJ2RlZmF1bHQnO1xyXG4gIH1cclxufTtcclxuXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vXHJcbi8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL1xyXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy9cclxuXHJcbmFzeW5jIGZ1bmN0aW9uIHVwZGF0ZVVpKCkge1xyXG4gIGxldCBzdGF0ZTogU3RhdGUgPSBhd2FpdCBydW50aW1lU2VuZE1lc3NhZ2UoeyBtZXNzYWdlOiBHRVRfU1RBVEUgfSk7XHJcblxyXG4gIGZvcmVTd2F0Y2guc3R5bGUuYmFja2dyb3VuZCA9IHN0YXRlLmZnLmhzbDtcclxuICBiYWNrU3dhdGNoLnN0eWxlLmJhY2tncm91bmQgPSBzdGF0ZS5iZy5oc2w7XHJcbiAgbGlua1N3YXRjaC5zdHlsZS5iYWNrZ3JvdW5kID0gc3RhdGUubGkuaHNsO1xyXG5cclxuICBjaGFuZ2VDb2xvcnNDaGVja2JveC5jaGVja2VkID0gc2hvdWxkQ2hhbmdlQ29sb3JzKHN0YXRlKTtcclxuICBsaWdodG5lc3NTbGlkZXIudmFsdWUgPSBzdGF0ZS5saWdodG5lc3MudG9TdHJpbmcoKTtcclxuICBsaWdodG5lc3NWYWx1ZS5jaGlsZE5vZGVzWzBdLm5vZGVWYWx1ZSA9IGAke3N0YXRlLmxpZ2h0bmVzc30lYDtcclxuXHJcbiAgaWYgKHN0YXRlLmFjdGl2ZVRhYklkID09PSBJTlZBTElEX1RBQikge1xyXG4gICAgY2hhbmdlQ29sb3JzQ2hlY2tib3guc2V0QXR0cmlidXRlKFwiZGlzYWJsZWRcIiwgXCJkaXNhYmxlZFwiKTtcclxuICAgIGNoYW5nZUNvbG9yc0xhYmVsLnRleHRDb250ZW50ID0gXCJQbGVhc2UgcmVsb2FkIHRoaXMgdGFiIG9yIGFjdGl2YXRlIGEgbmV3IHRhYi5cIjtcclxuICB9IGVsc2UgaWYgKHN0YXRlLmludmFsaWRVcmwpIHtcclxuICAgIGNoYW5nZUNvbG9yc0NoZWNrYm94LnNldEF0dHJpYnV0ZShcImRpc2FibGVkXCIsIFwiZGlzYWJsZWRcIik7XHJcbiAgICBjaGFuZ2VDb2xvcnNMYWJlbC50ZXh0Q29udGVudCA9IFwiQ29sb3IgQ2hhbmdlciBjYW4ndCB3b3JrIG9uIHRoaXMgcGFnZS5cIjtcclxuICB9IGVsc2UgaWYgKHN0YXRlLmxvc3RDb25uZWN0aW9uKSB7XHJcbiAgICBjaGFuZ2VDb2xvcnNDaGVja2JveC5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCBcImRpc2FibGVkXCIpO1xyXG4gICAgY2hhbmdlQ29sb3JzTGFiZWwudGV4dENvbnRlbnQgPSBcIlBsZWFzZSByZWxvYWQgdGhpcyBwYWdlLlwiO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjaGFuZ2VDb2xvcnNDaGVja2JveC5yZW1vdmVBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiKTtcclxuICAgIGNoYW5nZUNvbG9yc0xhYmVsLnRleHRDb250ZW50ID0gXCJDaGFuZ2UgQ29sb3JzXCI7XHJcbiAgfVxyXG5cclxuICBzZXRBY3RpdmVDb2xvckJ1dHRvbihzdGF0ZSk7XHJcbiAgZHJhd0NhbnZhcyhzdGF0ZSk7XHJcbn1cclxuXHJcbmNocm9tZS5zdG9yYWdlLm9uQ2hhbmdlZC5hZGRMaXN0ZW5lcih1cGRhdGVVaSk7XHJcblxyXG53aW5kb3cub25sb2FkID0gdXBkYXRlVWk7XHJcbiJdLCJuYW1lcyI6WyIkOGI4Y2QxNzQ0YjQ4NjVjZSRleHBvcnQkNjQ0NmExODZkMDllMzc5ZSIsInRlc3QiLCJuYXZpZ2F0b3IiLCJ1c2VyQWdlbnQiLCIkOGI4Y2QxNzQ0YjQ4NjVjZSRleHBvcnQkNWU4NzA3ODg4YTg3ZDY5NSIsImh1ZSIsInNhdHVyYXRpb24iLCJsaWdodG5lc3MiLCJjaG9zZW5JZCIsImNvbG9yIiwic3dhdGNoIiwiaHNsIiwibGlnaHRuZXNzU2hpZnQiLCJodWVIb3ZlcmVkIiwiaHVlVmlzaXRlZCIsImFscGhhIiwiJDhiOGNkMTc0NGI0ODY1Y2UkZXhwb3J0JGZiNzY5ODU1MGI0MWY3MWEiLCIkOGI4Y2QxNzQ0YjQ4NjVjZSRleHBvcnQkNzg5NjFlYTgxY2FiMDFhIiwic3RhdGUiLCJhY3RpdmVUYWJIb3N0bmFtZSIsImFjdGl2ZVRhYklkIiwiaG9zdHMiLCJpbmNsdWRlcyIsIiQ4YjhjZDE3NDRiNDg2NWNlJGV4cG9ydCQzODY3ZGI0NGI3NGZmNTcyIiwibWVzc2FnZSIsImNocm9tZSIsInJ1bnRpbWUiLCJzZW5kTWVzc2FnZSIsImJyb3dzZXIiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkbGlnaHRuZXNzU2xpZGVyIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRsaWdodG5lc3NWYWx1ZSIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRjaGFuZ2VDb2xvcnNDaGVja2JveCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRjaGFuZ2VDb2xvcnNMYWJlbCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRmb3JlQnRuIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJGJhY2tCdG4iLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkbGlua0J0biIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRyZXNldEJ0biIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRmb3JlU3dhdGNoIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJGJhY2tTd2F0Y2giLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkbGlua1N3YXRjaCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRvbkNsaWNrRm9yZWdyb3VuZCIsInBheWxvYWQiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkb25DbGlja0JhY2tncm91bmQiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkb25DbGlja0xpbmsiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkY3JlYXRlQ2FudmFzU3dhdGNoIiwieCIsInkiLCJpZCIsInJhZGl1cyIsImhvdmVyZWQiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkdXBkYXRlQ2FudmFzU3dhdGNoIiwib25jbGljayIsImNoZWNrZWQiLCJhZGRFdmVudExpc3RlbmVyIiwiY2hpbGROb2RlcyIsIm5vZGVWYWx1ZSIsInRoaXMiLCJ2YWx1ZSIsInBhcnNlSW50IiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJGNhbnZhcyIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRjdHgiLCJnZXRDb250ZXh0Iiwid2lkdGgiLCJvZmZzZXRXaWR0aCIsImhlaWdodCIsIm9mZnNldEhlaWdodCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRjYW52YXNIZWlnaHQiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkb3JpZ2luWCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRvcmlnaW5ZIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJGJpZ1JhZGl1cyIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRsaXR0bGVSYWRpdXMiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkZ2FwIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJGxpdHRsZUdhcCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciR6ZXJvU2F0T2Zmc2V0WCIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciR6ZXJvU2F0T2Zmc2V0WSIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciR6ZXJvU2F0VGV4dE9mZnNldFkiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkc2F0UmFkaXVzIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJHN3YXRjaGVzIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJHRvUmFkcyIsImRlZ3JlZXMiLCJNYXRoIiwiUEkiLCJhc3luYyIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRkcmF3Q2FudmFzIiwiZmlsbFN0eWxlIiwiY2xlYXJSZWN0IiwidGV4dEFsaWduIiwiZm9udCIsImZpbGxUZXh0IiwiYmVnaW5QYXRoIiwiYXJjIiwiZmlsbCIsInN0cm9rZVN0eWxlIiwiYWN0aXZlQnRuIiwiZmciLCJiZyIsImxpIiwibGluZVdpZHRoIiwic2V0TGluZURhc2giLCJzdHJva2UiLCJqIiwiYWRqdXN0ZWROdW1Td2F0Y2hlcyIsIiQzNmZmNTAwZmJkNjU3MmU5JHZhciRudW1Td2F0Y2hlcyIsImkiLCJhbmdsZSIsImNvcyIsInNpbiIsImVsbGlwc2UiLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkY2hlY2tDb2xsaXNpb24iLCJzd2F0Y2hlcyIsInMiLCJsZWZ0IiwicmlnaHQiLCJ0b3AiLCJib3R0b20iLCIkMzZmZjUwMGZiZDY1NzJlOSR2YXIkdXBkYXRlVWkiLCJzdHlsZSIsImJhY2tncm91bmQiLCJ0b1N0cmluZyIsInNldEF0dHJpYnV0ZSIsInRleHRDb250ZW50IiwiaW52YWxpZFVybCIsImxvc3RDb25uZWN0aW9uIiwicmVtb3ZlQXR0cmlidXRlIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwiYWRkIiwiJDM2ZmY1MDBmYmQ2NTcyZTkkdmFyJHNldEFjdGl2ZUNvbG9yQnV0dG9uIiwiZSIsIm9mZnNldFgiLCJvZmZzZXRZIiwib25tb3VzZW91dCIsIm9ubW91c2Vtb3ZlIiwiY3Vyc29yIiwic3RvcmFnZSIsIm9uQ2hhbmdlZCIsImFkZExpc3RlbmVyIiwid2luZG93Iiwib25sb2FkIl0sInZlcnNpb24iOjMsImZpbGUiOiJwb3B1cC5IQVNIX1JFRl80NzcxZjZkZWVkMzUzZDRlLmpzLm1hcCJ9
