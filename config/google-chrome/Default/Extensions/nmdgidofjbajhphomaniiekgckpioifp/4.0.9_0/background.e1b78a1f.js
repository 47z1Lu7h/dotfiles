(()=>{const t=/Chrome/.test(navigator.userAgent);function e(t,e,s,n){let c={swatch:{hue:t,saturation:e,lightness:s,chosenId:n},hsl:"",lightnessShift:"",hueHovered:"",hueVisited:"",alpha:""};return a(c),c}function a(t){t.hsl=`hsl(${t.swatch.hue}, ${t.swatch.saturation}%, ${t.swatch.lightness}%)`,t.swatch.lightness>=50?t.lightnessShift=`hsl(${t.swatch.hue}, ${t.swatch.saturation}%, ${t.swatch.lightness-10}%)`:t.lightnessShift=`hsl(${t.swatch.hue}, ${t.swatch.saturation}%, ${t.swatch.lightness+10}%)`,t.hueHovered=`hsl(${t.swatch.hue+40}, ${t.swatch.saturation+20}%, ${t.swatch.lightness}%)`,t.hueVisited=`hsl(${t.swatch.hue-40}, ${t.swatch.saturation+20}%, ${t.swatch.lightness}%)`,t.alpha=`hsla(${t.swatch.hue}, ${t.swatch.saturation}%, ${t.swatch.lightness}%, 0.5)`}function s(t){return!!t.activeTabHostname&&(!!t.activeTabId&&!!t.hosts.includes(t.activeTabHostname))}function n(e){t?chrome.storage.sync.set({colorChangerState:e}):browser.storage.sync.set({colorChangerState:e})}const c="UPDATE_CONTENT",i="CHANGE_COLORS",o=-9999,h="fore",r="back",l="link",g={activeTabId:o,activeTabHostname:"",fg:e(0,0,80,"zero"),bg:e(0,0,25,"zero"),li:e(68,80,80,"2-6"),activeBtn:h,lightness:80,hosts:[],lostConnection:!1,invalidUrl:!1};let u=JSON.parse(JSON.stringify(g));function d(t){u.activeTabHostname&&u.activeTabId&&(t&&!u.hosts.includes(u.activeTabHostname)?u.hosts.push(u.activeTabHostname):u.hosts=[...u.hosts.filter((t=>t!==u.activeTabHostname))],T(),v({message:c,payload:u}),n(u))}function b(t,e){t.swatch.hue=e.hue,t.swatch.saturation=e.saturation,t.swatch.lightness=e.lightness,t.swatch.chosenId=e.id,a(t)}function m(t){if(u.invalidUrl=!1,u.lostConnection=!1,n(u),!t.url)return;let e=new URL(t.url);e.hostname&&"chrome:"!==e.protocol&&"about:"!==e.protocol&&"addons.mozilla.org"!==e.hostname?(u.activeTabHostname=e.hostname,n(u),T(),v({message:c,payload:u})):w()}function w(){u.activeTabHostname="",u.invalidUrl=!0,n(u)}async function v(t){if(u.activeTabId)try{await chrome.tabs.sendMessage(u.activeTabId,t)}catch(t){u.lostConnection=!0,n(u)}}function f(t,e){t.menuItemId===i&&d(!!t.checked)}function T(){chrome.contextMenus.update(i,{checked:s(u)})}chrome.tabs.onActivated.addListener((function(t){u.activeTabId=t.tabId,n(u),chrome.tabs.get(t.tabId,m)})),chrome.tabs.onUpdated.addListener((function(t,e,a){u.activeTabId===o?(u.activeTabId=t,m(a)):u.activeTabId===t&&m(a)})),chrome.runtime.onMessage.addListener((function(t,e,s){switch(t.message){case"GET_STATE":s(u);break;case i:d(t.payload);break;case"SET_ACTIVE_BUTTON":!function(t){u.activeBtn=t,t==h?u.lightness=u.fg.swatch.lightness:t==r?u.lightness=u.bg.swatch.lightness:t==l&&(u.lightness=u.li.swatch.lightness);n(u)}(t.payload);break;case"UPDATE_CHOSEN_COLOR":!function(t){switch(u.activeBtn){case h:b(u.fg,t);break;case r:b(u.bg,t);break;case l:b(u.li,t)}v({message:c,payload:u}),n(u)}(t.payload);break;case"CHANGE_LIGHTNESS":!function(t){switch(u.lightness=t,u.activeBtn){case h:u.fg.swatch.lightness=t,a(u.fg);break;case r:u.bg.swatch.lightness=t,a(u.bg);break;case l:u.li.swatch.lightness=t,a(u.li)}n(u),v({message:c,payload:u})}(t.payload);break;case"RESET":!function(){let t=JSON.parse(JSON.stringify(g));u.hosts=t.hosts,u.fg=t.fg,u.bg=t.bg,u.li=t.li,u.activeBtn=t.activeBtn,u.lightness=t.lightness,u.lostConnection=t.lostConnection,u.invalidUrl=t.invalidUrl,T(),v({message:c,payload:u}),n(u)}()}return!0})),chrome.runtime.onInstalled.addListener((function(t){"update"===t.reason||t.reason})),async function(){let e=await(t?chrome.storage.sync.get(["colorChangerState"]):browser.storage.sync.get(["colorChangerState"]));e?.colorChangerState&&(u=e.colorChangerState),u.activeTabId=o,u.activeTabHostname="";let a=await(c={currentWindow:!0,active:!0},t?chrome.tabs.query(c):browser.tabs.query(c));var c;if(a.length>0){let t=a[0];t.id&&(u.activeTabId=t.id,m(t))}!function(){let t={id:i,title:"Change Colors",type:"checkbox",checked:s(u)};chrome.contextMenus.removeAll(),chrome.contextMenus.create(t),chrome.contextMenus.onClicked.removeListener(f),chrome.contextMenus.onClicked.addListener(f)}(),n(u)}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
